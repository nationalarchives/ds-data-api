using AutoMapper;
using ia_data_api.Models;
using TNA.DataDefinitionObjects;

namespace ia_data_api
{
    public class Mapping : Profile
    {
        public Mapping()
        {
            CreateMap<XReferenceModel, XRef>()
                    .ForMember(dest => dest.XRefId, opt => opt.MapFrom(src => src.XReferenceId))
                    .ForMember(dest => dest.XRefC, opt => opt.MapFrom(src => src.XReferenceCode))
                    .ForMember(dest => dest.XRefN, opt => opt.MapFrom(src => src.XReferenceName))
                    .ForMember(dest => dest.XRefT, opt => opt.MapFrom(src => src.XReferenceType))
                    .ForMember(dest => dest.XRefURL, opt => opt.MapFrom(src => src.XReferenceURL))
                    .ForMember(dest => dest.XRefD, opt => opt.MapFrom(src => src.XReferenceDescription))
                    .ForMember(dest => dest.XRefSrt, opt => opt.MapFrom(src => src.XReferenceSortWord)).ReverseMap();

            CreateMap<EntityReferenceModel, EntRef>()
                    .IncludeBase<XReferenceModel, XRef>()
                    .ForMember(dest => dest.Desc, opt => opt.MapFrom(src => src.Description))
                    .ForMember(dest => dest.PreTtl, opt => opt.MapFrom(src => src.PreTitle))
                    .ForMember(dest => dest.PTtl, opt => opt.MapFrom(src => src.Title))
                    .ForMember(dest => dest.FN, opt => opt.MapFrom(src => src.FirstName))
                    .ForMember(dest => dest.SN, opt => opt.MapFrom(src => src.Surname))
                    .ForMember(dest => dest.SDate, opt => opt.MapFrom(src => src.StartDate))
                    .ForMember(dest => dest.EDate, opt => opt.MapFrom(src => src.EndDate)).ReverseMap();

            CreateMap<PlaceModel, Place>()
                    .ForMember(dest => dest.Desc, opt => opt.MapFrom(src => src.Description))
                    .ForMember(dest => dest.DispName, opt => opt.MapFrom(src => src.DisplayName))
                    .ForMember(dest => dest.PlN, opt => opt.MapFrom(src => src.PlaceName))
                    .ForMember(dest => dest.Par, opt => opt.MapFrom(src => src.Parish))
                    .ForMember(dest => dest.TwnID, opt => opt.MapFrom(src => src.TownID))
                    .ForMember(dest => dest.Twn, opt => opt.MapFrom(src => src.Town))
                    .ForMember(dest => dest.Cnty, opt => opt.MapFrom(src => src.County))
                    .ForMember(dest => dest.CntyID, opt => opt.MapFrom(src => src.CountyID))
                    .ForMember(dest => dest.OldCnty, opt => opt.MapFrom(src => src.OldCounty))
                    .ForMember(dest => dest.OldCntyID, opt => opt.MapFrom(src => src.OldCountyID))
                    .ForMember(dest => dest.NewCnty, opt => opt.MapFrom(src => src.NewCounty))
                    .ForMember(dest => dest.NewCntyID, opt => opt.MapFrom(src => src.NewCountyID))
                    .ForMember(dest => dest.CtryID, opt => opt.MapFrom(src => src.CountryID))
                    .ForMember(dest => dest.Ctry, opt => opt.MapFrom(src => src.Country))
                    .ForMember(dest => dest.Reg, opt => opt.MapFrom(src => src.Region))
                    .ForMember(dest => dest.RegID, opt => opt.MapFrom(src => src.RegionID))
                    .ForMember(dest => dest.StDt, opt => opt.MapFrom(src => src.StartDate))
                    .ForMember(dest => dest.EndDt, opt => opt.MapFrom(src => src.EndDate))
                    .ForMember(dest => dest.Grid, opt => opt.MapFrom(src => src.Grid))
                    .ForMember(dest => dest.Val, opt => opt.MapFrom(src => src.Validation))
                    .ForMember(dest => dest.LocType, opt => opt.MapFrom(src => src.LocationType)).ReverseMap();

            CreateMap<PersonModel, Prsn>()
                .ForMember(dest => dest.PreTtl, opt => opt.MapFrom(src => src.PreTitle))
                .ForMember(dest => dest.PTtl, opt => opt.MapFrom(src => src.Title))
                .ForMember(dest => dest.SrtTtl, opt => opt.MapFrom(src => src.SortTitle))
                .ForMember(dest => dest.FN, opt => opt.MapFrom(src => src.Forenames))
                .ForMember(dest => dest.SN, opt => opt.MapFrom(src => src.Surname))
                .ForMember(dest => dest.SrtName, opt => opt.MapFrom(src => src.SortName))
                .ForMember(dest => dest.Epithet, opt => opt.MapFrom(src => src.Epithet))
                .ForMember(dest => dest.DoB, opt => opt.MapFrom(src => src.DateOfBirth))
                .ForMember(dest => dest.DoD, opt => opt.MapFrom(src => src.DateOfDeath))
                .ForMember(dest => dest.Occ, opt => opt.MapFrom(src => src.Occupation))
                .ReverseMap();

            CreateMap<ScopeContentModel, SCont>()
                    .ForMember(dest => dest.Pple, opt => opt.MapFrom(src => src.PersonNames))
                    .ForMember(dest => dest.Plcs, opt => opt.MapFrom(src => src.PlaceNames))
                    .ForMember(dest => dest.RefdToDate, opt => opt.MapFrom(src => src.RefferedToDate))
                    .ForMember(dest => dest.Orgs, opt => opt.MapFrom(src => src.Organizations))
                    .ForMember(dest => dest.Desc, opt => opt.MapFrom(src => src.Description))
                    .ForMember(dest => dest.Eph, opt => opt.MapFrom(src => src.Ephemera))
                    .ForMember(dest => dest.Schema, opt => opt.MapFrom(src => src.Schema)).ReverseMap();

            CreateMap<RegistryRecordsModel, RegRecs>()
                .ForMember(dest => dest.CURL, opt => opt.MapFrom(src => src.CatalogueURL))
                .ForMember(dest => dest.ISADGRef, opt => opt.MapFrom(src => src.ISADGReference))
                .ForMember(dest => dest.NRAD, opt => opt.MapFrom(src => src.NRADetails))
                .ForMember(dest => dest.NRAID, opt => opt.MapFrom(src => src.NRAID))
                .ForMember(dest => dest.OthRef, opt => opt.MapFrom(src => src.OtherReference))
                .ForMember(dest => dest.ROAccNo, opt => opt.MapFrom(src => src.ROAccessionNumber))
                .ForMember(dest => dest.ROColRef, opt => opt.MapFrom(src => src.ROCollectionReference))
                .ForMember(dest => dest.SLists, opt => opt.MapFrom(src => src.ScannedLists))
                .ForMember(dest => dest.SrtW, opt => opt.MapFrom(src => src.SortWord))
                .ForMember(dest => dest.RRTtl, opt => opt.MapFrom(src => src.RegistryRecordTitle)).ReverseMap();

            CreateMap<InformationAssetModel, IA>()
                .ForMember(dest => dest.IAID, opt => opt.MapFrom(src => src.Iaid))
                .ForMember(dest => dest.RID, opt => opt.MapFrom(src => src.ReplicaId))
                .ForMember(dest => dest.Ref, opt => opt.MapFrom(src => src.CitableReference))
                .ForMember(dest => dest.PIAID, opt => opt.MapFrom(src => src.ParentId))
                .ForMember(dest => dest.AccDates, opt => opt.MapFrom(src => src.AccumulationDates))
                .ForMember(dest => dest.Accrls, opt => opt.MapFrom(src => src.Accruals))
                .ForMember(dest => dest.AcsConds, opt => opt.MapFrom(src => src.AccessConditions))
                .ForMember(dest => dest.AdmBgr, opt => opt.MapFrom(src => src.AdministrativeBackground))
                .ForMember(dest => dest.ApprInfo, opt => opt.MapFrom(src => src.AppraisalInformation))
                .ForMember(dest => dest.Arrmnt, opt => opt.MapFrom(src => src.Arrangement))
                .ForMember(dest => dest.BatchId, opt => opt.MapFrom(src => src.BatchId))
                .ForMember(dest => dest.BRefIAID, opt => opt.MapFrom(src => src.RefIaid))
                .ForMember(dest => dest.CatId, opt => opt.MapFrom(src => src.CatalogueId))
                .ForMember(dest => dest.EDocId, opt => opt.MapFrom(src => src.EDocumentId))
                .ForMember(dest => dest.ChgType, opt => opt.MapFrom(src => src.ChargeType))
                .ForMember(dest => dest.CFrmDt, opt => opt.MapFrom(src => src.CoveringFromDate))
                .ForMember(dest => dest.CorpNs, opt => opt.MapFrom(src => src.CorporateNames))
                .ForMember(dest => dest.CovDts, opt => opt.MapFrom(src => src.CoveringDates))
                .ForMember(dest => dest.CpsInfo, opt => opt.MapFrom(src => src.CopiesInformation))
                .ForMember(dest => dest.CrtrNames, opt => opt.MapFrom(src => src.CreatorName))
                .ForMember(dest => dest.CToDt, opt => opt.MapFrom(src => src.CoveringToDate))
                .ForMember(dest => dest.CustHist, opt => opt.MapFrom(src => src.CustodialHistory))
                .ForMember(dest => dest.Clsr, opt => opt.MapFrom(src => new Clsr() { CT = src.ClosureType, CC = src.ClosureCode, CS = src.ClosureStatus, RecOpenD = src.RecordOpeningDate }))
                .ForMember(dest => dest.Dgtsd, opt => opt.MapFrom(src => src.Digitised))
                .ForMember(dest => dest.Dim, opt => opt.MapFrom(src => src.Dimensions))
                .ForMember(dest => dest.FRefDep, opt => opt.MapFrom(src => src.FormerReferenceDep))
                .ForMember(dest => dest.FRefPro, opt => opt.MapFrom(src => src.FormerReferencePro))
                .ForMember(dest => dest.HeldBys, opt => opt.MapFrom(src => src.HeldBy))
                .ForMember(dest => dest.ImmSrcOfAcs, opt => opt.MapFrom(src => src.ImmediateSourceOfAcquisition))
                .ForMember(dest => dest.Lang, opt => opt.MapFrom(src => src.Language))
                .ForMember(dest => dest.LglStts, opt => opt.MapFrom(src => src.LegalStatus))
                .ForMember(dest => dest.Links, opt => opt.MapFrom(src => src.Links))
                .ForMember(dest => dest.LocOfOrigs, opt => opt.MapFrom(src => src.LocationOfOriginals))
                .ForMember(dest => dest.LvlId, opt => opt.MapFrom(src => src.CatalogueLevel))
                .ForMember(dest => dest.MapDes, opt => opt.MapFrom(src => src.MapDesignation))
                .ForMember(dest => dest.MapScNum, opt => opt.MapFrom(src => src.MapScaleNumber))
                .ForMember(dest => dest.Note, opt => opt.MapFrom(src => src.Note))
                .ForMember(dest => dest.People, opt => opt.MapFrom(src => src.People))
                .ForMember(dest => dest.PhysCond, opt => opt.MapFrom(src => src.PhysicalCondition))
                .ForMember(dest => dest.PhysDescExtnt, opt => opt.MapFrom(src => src.PhysicalDescriptionExtent))
                .ForMember(dest => dest.PhysDescFrm, opt => opt.MapFrom(src => src.PhysicalDescriptionForm))
                .ForMember(dest => dest.Places, opt => opt.MapFrom(src => src.Places))
                .ForMember(dest => dest.PRef, opt => opt.MapFrom(src => src.ReferencePart))
                .ForMember(dest => dest.PublNotes, opt => opt.MapFrom(src => src.PublicationNote))
                .ForMember(dest => dest.RelMats, opt => opt.MapFrom(src => src.RelatedMaterial))
                .ForMember(dest => dest.SepMats, opt => opt.MapFrom(src => src.SeparatedMaterial))
                .ForMember(dest => dest.RstrOnUse, opt => opt.MapFrom(src => src.RestrictionsOnUse))
                .ForMember(dest => dest.SC, opt => opt.MapFrom(src => src.ScopeContent))
                .ForMember(dest => dest.Src, opt => opt.MapFrom(src => src.Source))
                .ForMember(dest => dest.SrtKey, opt => opt.MapFrom(src => src.SortKey))
                .ForMember(dest => dest.Subjects, opt => opt.MapFrom(src => src.Subjects))
                .ForMember(dest => dest.Ttl, opt => opt.MapFrom(src => src.Title))
                .ForMember(dest => dest.UnpFindAids, opt => opt.MapFrom(src => src.UnpublishedFindingAids))
                .ReverseMap()
                .ForMember(dest => dest.ClosureType, opt => opt.MapFrom(src => src.Clsr.CT))
                .ForMember(dest => dest.ClosureCode, opt => opt.MapFrom(src => src.Clsr.CC))
                .ForMember(dest => dest.ClosureStatus, opt => opt.MapFrom(src => src.Clsr.CS))
                .ForMember(dest => dest.RecordOpeningDate, opt => opt.MapFrom(src => src.Clsr.RecOpenD));

            //File Authority
            CreateMap<CategoryModel, Category>()
                .ForMember(dest => dest.CatID, opt => opt.MapFrom(src => src.CatagoryId))
                .ForMember(dest => dest.CatDesc, opt => opt.MapFrom(src => src.CatagoryDescription))
                .ForMember(dest => dest.SubCatID, opt => opt.MapFrom(src => src.SubCatagoryId))
                .ForMember(dest => dest.SubCatDesc, opt => opt.MapFrom(src => src.SubCatagoryDescription))
                .ReverseMap();

            CreateMap<CollectionModel, Collection>()
                .ForMember(dest => dest.RelToIA, opt => opt.MapFrom(src => src.RelatedToIa))
                .ForMember(dest => dest.RepIA, opt => opt.MapFrom(src => src.RepositoryIaId))
                .ReverseMap();

            CreateMap<RelationshipModel, Rls>()
                .ForMember(dest => dest.FAID, opt => opt.MapFrom(src => src.FaId))
                .ForMember(dest => dest.AuthN, opt => opt.MapFrom(src => src.AuthorityName))
                .ForMember(dest => dest.RlsCat, opt => opt.MapFrom(src => src.RelationshipCategory))
                .ForMember(dest => dest.RlsDesc, opt => opt.MapFrom(src => src.RelationshipDescription))
                .ForMember(dest => dest.RlsDates, opt => opt.MapFrom(src => src.RelationshipDates))
                .ReverseMap();

            CreateMap<ResourceModel, Res>()
                .ForMember(dest => dest.ResTtl, opt => opt.MapFrom(src => src.ResourceTitle))
                .ForMember(dest => dest.ResTyp, opt => opt.MapFrom(src => src.ResourceType))
                .ForMember(dest => dest.ResLnk, opt => opt.MapFrom(src => src.ResourceLink))
                .ReverseMap();

            CreateMap<FaInformationAssetModel, FileAuthorityIA>()
                .ForMember(dest => dest.FAID, opt => opt.MapFrom(src => src.FaId))
                .ForMember(dest => dest.FAType, opt => opt.MapFrom(src => src.FaType))
                .ForMember(dest => dest.Gender, opt => opt.MapFrom(src => src.Gender))
                .ForMember(dest => dest.SubjType, opt => opt.MapFrom(src => src.SubjectType))
                .ForMember(dest => dest.Places, opt => opt.MapFrom(src => src.Places))
                .ForMember(dest => dest.Categories, opt => opt.MapFrom(src => src.Categories))
                .ForMember(dest => dest.PreTtl, opt => opt.MapFrom(src => src.PreTitle))
                .ForMember(dest => dest.Ttl, opt => opt.MapFrom(src => src.Title))
                .ForMember(dest => dest.Fnames, opt => opt.MapFrom(src => src.Forenames))
                .ForMember(dest => dest.Name, opt => opt.MapFrom(src => src.Name))
                .ForMember(dest => dest.Eptht, opt => opt.MapFrom(src => src.Epithet))
                .ForMember(dest => dest.SrtTtl, opt => opt.MapFrom(src => src.SortTitle))
                .ForMember(dest => dest.SrtN, opt => opt.MapFrom(src => src.SortName))
                .ForMember(dest => dest.AuthN, opt => opt.MapFrom(src => src.AuthorityName))
                .ForMember(dest => dest.FrstDate, opt => opt.MapFrom(src => src.FirstDate))
                .ForMember(dest => dest.LstDate, opt => opt.MapFrom(src => src.LastDate))
                .ForMember(dest => dest.Dates, opt => opt.MapFrom(src => src.Dates))
                .ForMember(dest => dest.IsAuthRec, opt => opt.MapFrom(src => src.IsAuthorityRecord))
                .ForMember(dest => dest.Collections, opt => opt.MapFrom(src => src.Collections))
                .ForMember(dest => dest.CorpNum, opt => opt.MapFrom(src => src.CorporateNumber))
                .ForMember(dest => dest.SubjTtl, opt => opt.MapFrom(src => src.SubjectTitle))
                .ForMember(dest => dest.ISAARRef, opt => opt.MapFrom(src => src.IsaarReferernce))
                .ForMember(dest => dest.FISAARRef, opt => opt.MapFrom(src => src.FormerIsaarReference))
                .ForMember(dest => dest.LglStts, opt => opt.MapFrom(src => src.LegalStatus))
                .ForMember(dest => dest.SrsOfAuth, opt => opt.MapFrom(src => src.SourcesOfAuthority))
                .ForMember(dest => dest.Hist, opt => opt.MapFrom(src => src.History))
                .ForMember(dest => dest.Gnlgy, opt => opt.MapFrom(src => src.Genealogy))
                .ForMember(dest => dest.HistCtxt, opt => opt.MapFrom(src => src.HistoricalContext))
                .ForMember(dest => dest.Srcs, opt => opt.MapFrom(src => src.Sources))
                .ForMember(dest => dest.FncsOccsOrActs, opt => opt.MapFrom(src => src.FunctionsOccupationsActivities))
                .ForMember(dest => dest.NFrm, opt => opt.MapFrom(src => src.NameForm))
                .ForMember(dest => dest.BiogHistLnks, opt => opt.MapFrom(src => src.BiographyHistoryLinks))
                .ForMember(dest => dest.Rlss, opt => opt.MapFrom(src => src.Relationships))
                .ForMember(dest => dest.RelRess, opt => opt.MapFrom(src => src.RelatedResources))
                .ForMember(dest => dest.RemAndFunc, opt => opt.MapFrom(src => src.RemitAndFunction))
                .ForMember(dest => dest.ValTxt, opt => opt.MapFrom(src => src.ValidationText))
                .ForMember(dest => dest.VarTxt, opt => opt.MapFrom(src => src.VariationText))
                .ForMember(dest => dest.JurisdTxt, opt => opt.MapFrom(src => src.JurisdictionText))
                .ForMember(dest => dest.IsPlOfDep, opt => opt.MapFrom(src => src.IsPlaceOfDeposit))
                .ForMember(dest => dest.NatPlOfDepCode, opt => opt.MapFrom(src => src.NationalPlaceOfDepositCode))
                .ForMember(dest => dest.BiogHist, opt => opt.MapFrom(src => src.BiographyHistory))
                .ForMember(dest => dest.BrwsC, opt => opt.MapFrom(src => src.BrowseCharacter))
                .ForMember(dest => dest.IsPblc, opt => opt.MapFrom(src => src.IsPublic))
                .ReverseMap();
        }
    }
}
